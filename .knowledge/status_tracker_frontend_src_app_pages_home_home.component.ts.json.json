{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "Angular component for the home page/dashboard of a status tracker application, displaying statuses, handling CRUD operations, and managing UI interactions.", "external_files": ["../../shared/components/header/header.component", "../../core/services/status.service", "../../core/services/auth.service", "../../core/models/status.models", "../../shared/components/status-form/status-form.component"], "external_methods": ["StatusService.list", "StatusService.create", "StatusService.update", "StatusService.remove", "AuthService.logout", "Router.navigate"], "published": [], "classes": [{"name": "HomeComponent", "description": "Main component managing the dashboard page, including listing, creating, editing, and deleting statuses, as well as UI controls."}], "methods": [{"name": "ngOnInit", "description": "Lifecycle hook that fetches the list of statuses when the component initializes."}, {"name": "doLogout", "description": "Logs out the user and navigates to the login page."}, {"name": "fetch", "description": "Fetches the list of statuses from the server."}, {"name": "startCreate", "description": "Sets the mode to create a new status."}, {"name": "startEdit", "description": "Sets the mode to edit an existing status."}, {"name": "cancel", "description": "Resets mode to idle and clears the selected status."}, {"name": "save", "description": "Saves a new or updated status by calling the respective service methods."}, {"name": "remove", "description": "Removes a status after user confirmation."}], "calls": ["this.statusService.list", "this.statusService.create", "this.statusService.update", "this.statusService.remove", "this.auth.logout", "this.router.navigate"], "search-terms": ["Angular", "HomeComponent", "StatusTracker", "StatusService", "StatusFormComponent", "dashboard", "status list"], "state": 2, "file_id": 33, "knowledge_revision": 91, "git_revision": "", "revision_history": [{"71": ""}, {"82": ""}, {"89": ""}, {"91": ""}], "ctags": [{"_type": "tag", "name": "HomeComponent", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^export class HomeComponent implements OnInit {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "proceed", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^    const proceed = w && typeof w.confirm === 'function' ? w.confirm('Delete this status?') : tr/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^    const q = this.q.toLowerCase().trim();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "statusService", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^  private statusService = inject(StatusService);$/", "language": "TypeScript", "kind": "property", "scope": "HomeComponent", "scopeKind": "class"}, {"_type": "tag", "name": "w", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^    const proceed = w && typeof w.confirm === 'function' ? w.confirm('Delete this status?') : tr/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "w", "path": "/home/kavia/workspace/code-generation/status-tracker-application-22915-22925/status_tracker_frontend/src/app/pages/home/home.component.ts", "pattern": "/^    const w = (globalThis as any)?.window;$/", "language": "TypeScript", "kind": "constant"}], "hash": "f8a13ce757ec48222d14f6710b8aaadf", "format-version": 4, "code-base-name": "status_tracker_frontend", "filename": "status_tracker_frontend/src/app/pages/home/home.component.ts", "fields": [{"name": "private statusService = inject(StatusService);", "scope": "HomeComponent", "scopeKind": "class", "description": "unavailable"}]}